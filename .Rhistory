marginTop = 0,
marginBottom = 0,
borderWidth = 0,
type = 'column')%>%
hc_add_series(data =  chart_2,
showInLegend = TRUE,
hcaes(x = Player, y = Gls),
groupPadding = .5,
pointWidth = 10,
plotBorderWidth = 0,
type = 'column')
#   yellow_red_function(show_in_legend = TRUE,
#     stacking_type = NULL,
#     data =  gapminder::gapminder %>% filter(country %in% c('Argentina', 'Chile')),
#     type = 'column',
#     color = c('#484848', '#FFB67A')
#     # color = c(rgb(runif(1,0,1),runif(1,0,1),runif(1,0,1)),
#     #           rgb(runif(1,0,1),runif(1,0,1),runif(1,0,1)))
#   )
#
# }
highchart(type = 'chart') %>%
hc_add_series(data =  chart_2,
# showInLegend = TRUE,
hcaes(x = Player, y = xG_Expected),
groupPadding = .5,
pointWidth = 20,
name = 'Goals',
categories =chart_2$Player,
color = '#484848' ,
# plotBorderWidth = 0,
# marginRight = 0,
# marginLeft = 0,
# marginTop = 0,
# marginBottom = 0,
# borderWidth = 0,
type = 'column')%>%
hc_add_series(data = chart_2,
# showInLegend = TRUE,
hcaes(x = Player, y = Gls),
groupPadding = .5,
pointWidth = 10,
color  = '#FFB67A',
plotBorderWidth = 0,
categories = chart_2$Player,
type = 'column')
#   yellow_red_function(show_in_legend = TRUE,
#     stacking_type = NULL,
#     data =  gapminder::gapminder %>% filter(country %in% c('Argentina', 'Chile')),
#     type = 'column',
#     color = c('#484848', '#FFB67A')
#     # color = c(rgb(runif(1,0,1),runif(1,0,1),runif(1,0,1)),
#     #           rgb(runif(1,0,1),runif(1,0,1),runif(1,0,1)))
#   )
#
# }
highchart(type = 'chart') %>%
hc_add_series(data =  chart_2,
showInLegend = FALSE,
hcaes(x = Player, y = xG_Expected),
groupPadding = .5,
pointWidth = 20,
name = 'Goals',
categories =chart_2$Player,
color = '#484848' ,
# plotBorderWidth = 0,
# marginRight = 0,
# marginLeft = 0,
# marginTop = 0,
# marginBottom = 0,
# borderWidth = 0,
type = 'column')%>%
hc_add_series(data = chart_2,
showInLegend = FALSE,
hcaes(x = Player, y = Gls),
groupPadding = .5,
pointWidth = 10,
color  = '#FFB67A',
plotBorderWidth = 0,
categories = chart_2$Player,
type = 'column')
runApp()
chart_2$Player
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
choices <- overview_card %>% filter(Team_or_Opponent == 'team') %>% pull(Squad)
runApp()
reactable(
table_overview[['ARSENAL']],
bordered = TRUE,
outlined = TRUE,
pagination = TRUE,
cellPadding = 10,
width = 'auto',
height = 250,
defaultColDef = colDef(
# filterable = TRUE,
minWidth = 75,
vAlign = "top",
style = list(fontSize = '11px',
textAlign = 'center')
)
# columns = list(Value = colDef(
#   name = "Value ($)",
#   format = colFormat(currency = "USD")
# ))
)
reactable(
table_overview[['ARSENAL']],
bordered = TRUE,
outlined = TRUE,
pagination = TRUE,
cellPadding = '10px',
width = 'auto',
height = 250,
defaultColDef = colDef(
# filterable = TRUE,
minWidth = 75,
vAlign = "top",
style = list(fontSize = '11px',
textAlign = 'center')
)
# columns = list(Value = colDef(
#   name = "Value ($)",
#   format = colFormat(currency = "USD")
# ))
)
reactable(
table_overview[['ARSENAL']],
bordered = TRUE,
outlined = TRUE,
pagination = TRUE,
cellPadding = '10',
width = 'auto',
height = 250,
defaultColDef = colDef(
# filterable = TRUE,
minWidth = 75,
vAlign = "top",
style = list(fontSize = '11px',
textAlign = 'center')
)
# columns = list(Value = colDef(
#   name = "Value ($)",
#   format = colFormat(currency = "USD")
# ))
)
reactable(
table_overview[['ARSENAL']],
bordered = TRUE,
outlined = TRUE,
pagination = TRUE,
cellPadding = 1,
width = 'auto',
height = 250,
defaultColDef = colDef(
# filterable = TRUE,
minWidth = 75,
vAlign = "top",
style = list(fontSize = '11px',
textAlign = 'center')
)
# columns = list(Value = colDef(
#   name = "Value ($)",
#   format = colFormat(currency = "USD")
# ))
)
reactable(
table_overview[['ARSENAL']],
bordered = TRUE,
outlined = TRUE,
pagination = TRUE,
cellPadding = TRUE,
width = 'auto',
height = 250,
defaultColDef = colDef(
# filterable = TRUE,
minWidth = 75,
vAlign = "top",
style = list(fontSize = '11px',
textAlign = 'center')
)
# columns = list(Value = colDef(
#   name = "Value ($)",
#   format = colFormat(currency = "USD")
# ))
)
reactable(
table_overview[['ARSENAL']],
bordered = TRUE,
outlined = TRUE,
pagination = TRUE,
cellPadding = '2px 2px',
width = 'auto',
height = 250,
defaultColDef = colDef(
# filterable = TRUE,
minWidth = 75,
vAlign = "top",
style = list(fontSize = '11px',
textAlign = 'center')
)
# columns = list(Value = colDef(
#   name = "Value ($)",
#   format = colFormat(currency = "USD")
# ))
)
reactable(
table_overview[['ARSENAL']],
bordered = TRUE,
outlined = TRUE,
pagination = TRUE,
width = 'auto',
height = 250,
defaultColDef = colDef(
# filterable = TRUE,
minWidth = 75,
vAlign = "top",
style = list(fontSize = '11px',
textAlign = 'center')
),
theme = reactableTheme(
cellPadding = '2px 2px'
)
# columns = list(Value = colDef(
#   name = "Value ($)",
#   format = colFormat(currency = "USD")
# ))
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
team_urls[i]
worldfootballR::fb_team_match_results(team_url = team_urls[i])
worldfootballR::fb_team_match_results(team_url = team_urls[i])
?worldfootballR::fotmob_get_match_details()
team_urls[i]
worldfootballR::fb_match_summary(match_url = "https://fbref.com/en/squads/1df6b87e/2020-2021/Sheffield-United-Stats")
worldfootballR::fb_match_report(match_url = "https://fbref.com/en/squads/1df6b87e/2020-2021/Sheffield-United-Stats")
?worldfootballR::fb_team_match_results()
man_city_url <- "https://fbref.com/en/squads/b8fd03ef/Manchester-City-Stats"
fb_team_match_results(man_city_url)
team_urls
man_city_url <-"https://fbref.com/en/squads/1df6b87e/2020-2021/Sheffield-United-Stats"
fb_team_match_results(man_city_url)
fb_team_match_results(man_city_url) %>% str()
dt <-fb_team_match_results(man_city_url) %>% str()
dt <-fb_team_match_results(man_city_url)
dt
dt %>% head()
dt <-fb_team_match_results(man_city_url) %>% tail(5)
dt
last_five_games <- vector(mode = 'list')
for(i in 1:length(choices)){
last_five_games[[i]] <-
fb_team_match_results(team_urls[i]) %>% tail(5) %>%
select(Venue,Opponent,xG,GF,GA,Formation)
}
last_five_games
last_five_games <- last_five_games %>% set_names(str_to_upper(elements_names))
last_five_games
fb_team_match_results(team_urls[i])
last_five_games[[i]] <-
fb_team_match_results(team_urls[i])
last_five_games[[i]]
last_five_games <- vector(mode = 'list')
#
for(i in 1:length(choices)){
last_five_games[[i]] <-
fb_team_match_results(team_urls[i]) %>% tail(5) %>%
select(Venue,Team,Opponent,xG,GF,GA,Formation)
}
last_five_games <- last_five_games %>% set_names(str_to_upper(elements_names))
last_five_games
runApp()
table_overview
last_five_games
last_five_games$`MANCHESTER CITY`
#     fb_team_match_results(team_urls[i])
fb_team_match_results(team_urls[i])
xxx <- fb_team_match_results(team_urls[i])
xxx
xxx %>% head()
xxx %>% head()
xxx %>% head()
last_five_games <- vector(mode = 'list')
#
for(i in 1:length(choices)){
last_five_games[[i]] <-
fb_team_match_results(team_urls[i]) %>% tail(5) %>%
select(Venue,Team,Opponent,xG,xGA,GF,GA,Formation)
}
last_five_games <- last_five_games %>% set_names(str_to_upper(elements_names))
last_five_games
runApp()
table_overview <- table_overview %>% map(~ .x %>% top_n(10))%>% set_names(str_to_upper(elements_names))
last_five_games <- vector(mode = 'list')
for(i in 1:length(choices)){
last_five_games[[i]] <-
fb_team_match_results(team_urls[i]) %>% tail(5) %>%
select(Venue,Team,Opponent,xG,xGA,GF,GA,Formation)
}
last_five_games <- last_five_games %>% set_names(str_to_upper(elements_names))
last_five_games
runApp()
last_five_games[[i]] <-
fb_team_match_results(team_urls[i])
last_five_games[[i]]
last_five_games[[i]]
last_five_games[[i]]
last_five_games[[i]]
cards_info
last_five_games[[i]]
last_five_games[[i]]
runApp()
runApp()
runApp()
last_five_games[[i]]
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
last_five_games[[i]]
last_five_games[[i]] <-
fb_team_match_results(team_urls[i])
last_five_games[[i]]
last_five_games[[i]]
runApp()
last_five_games[[i]]
last_five_games[[i]]
runApp()
runApp()
runApp()
last_five_games[[i]]$Comp
cards_info[1,]$Comp
runApp()
# https://public.tableau.com/app/profile/pradeepkumar.g/viz/HRAttritionDashboardRWFD_16570446563570/viz
ui <- fluidPage(
div(class = 'main_title_div',
h1(class = 'main_title',
'Premiere League 2021 - Dashboard'),
# selectInput(inputId = 'season',
#             label = 'Season',
#             choices = 2012:2022
#
#
# ),
selectInput(inputId = 'custom_select',
label = 'Clubs',
choices = str_to_upper(names(elements_names)))),
# https://stackoverflow.com/questions/44159168/how-to-style-an-single-individual-selectinput-menu-in-r-shiny
gridPanel(title = '',id = 'main_grid_panel',
# style = 'border:5px solid red;',
breakpoint_system = getBreakpointSystem(),
includeCSS(path = 'www/css/style.css'),
areas =   list(
default = c(
"overview top_right ",
" overview bottom_right_two",
" overview  bottom_right_one "
),
md = c(
"overview ",
"top_right ",
"bottom_right_one",
"bottom_right_two"
)
# xs = c(
#   "header",
#   "area-1",
#   "area-2",
#   "area-3",
#   "area-4",
#   "area-5",
#   "area-6",
#   "footer"
# )
),
columns = '750px .65fr',
gap = "2.5em",
overview_UI('overview'),
top_right_UI('top_right')
# bottom_right_UI('bottom_right')
)
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
last_five_games[[i]]
last_five_games[[i]]
runApp()
last_five_games <- vector(mode = 'list')
for(i in 1:length(choices)){
last_five_games[[i]] <-
fb_team_match_results(team_urls[i]) %>% tail(5) %>%
select(Venue, Team, Date, Opponent,GF,GA, Date,Captain, Formation, xG,Poss)%>%
filter(Comp == 'Premier League')
}
last_five_games <- last_five_games %>%
set_names(str_to_upper(elements_names))
last_five_games <- vector(mode = 'list')
for(i in 1:length(choices)){
last_five_games[[i]] <-
fb_team_match_results(team_urls[i]) %>% tail(5) %>%
select(Venue, Team, Date, Opponent,GF,GA, Date,Captain, Formation, xG,Poss)%>%
filter(Comp == 'Premier League')
}
last_five_games <- vector(mode = 'list')
for(i in 1:length(choices)){
last_five_games[[i]] <-
fb_team_match_results(team_urls[i]) %>% tail(5) %>%
filter(Comp == 'Premier League')%>%
select(Venue, Team, Date, Opponent,GF,GA, Date,Captain, Formation, xG,Poss)
}
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
games_number
cards_info
runApp()
last_five_games$`MANCHESTER UNITED`
runApp()
last_five_games
last_five_games
last_five_games[[i]] <-
fb_team_match_results(team_urls[i])
last_five_games[[i]]
last_five_games[[i]] %>% last(5)
last_five_games[[i]]
last_five_games[[i]]
last_five_games[[i]]%>% length()
last_five_games
last_five_games
for(i in 1:length(choices)){
last_five_games[[i]] <-
fb_team_match_results(team_urls[i]) %>% tail(5) %>%
filter(Comp == 'Premier League')%>%
select(Venue, Team, Date, Opponent,GF,GA, Date,Captain, Formation, xG,Poss)
}
last_five_games
fb_team_match_results(team_urls[i])
runApp()
last_five_games <- vector(mode = 'list')
for(i in 1:length(choices)){
last_five_games[[i]] <-
fb_team_match_results(team_urls[i]) %>%
filter(Comp == 'Premier League')%>%
select(Venue, Team, Date, Opponent,GF,GA, Date,Captain, Formation, xG,Poss)
}
last_five_games <- vector(mode = 'list')
for(i in 1:length(choices)){
last_five_games[[i]] <-
fb_team_match_results(team_urls[i]) %>%
filter(Comp == 'Premier League')%>%
select(Venue, Team, Date, Opponent,GF,GA, Date,Captain, Formation, xG,Poss) %>% head(10)
}
last_five_games <- last_five_games %>%
set_names(str_to_upper(elements_names))
last_five_games
runApp()
runApp()
runApp()
runApp()
runApp()
